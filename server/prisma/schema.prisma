// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Stock {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  mtStock     Int     @default(0)
  ibStock     Int     @default(0)
  ddnStock    Int     @default(0)
  dlStock     Int     @default(0)
  mainStock   Int     @default(0)
  smapleLine  Int     @default(0)
  godwanStock Int     @default(0)
  chdStock    Int     @default(0)
  productId   String  @unique @db.ObjectId
  Product     Product @relation(fields: [productId], references: [id])
}

model Product {
  id            String @id @default(auto()) @map("_id") @db.ObjectId
  modelName     String @unique
  brand         String
  image         String
  mrp           Int
  consumerOffer Int    @default(0)
  totalStock    Int    @default(0)
  stockId       Stock?
}

model CartQuantity {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  mtStock     Int    @default(0)
  ibStock     Int    @default(0)
  ddnStock    Int    @default(0)
  dlStock     Int    @default(0)
  mainStock   Int    @default(0)
  smapleLine  Int    @default(0)
  godwanStock Int    @default(0)
  chdStock    Int    @default(0)
  cartId      String @unique @db.ObjectId
  Cart        Cart   @relation(fields: [cartId], references: [id])
}

model Cart {
  id           String        @id @default(auto()) @map("_id") @db.ObjectId
  cartId       String
  fromLocation String        @default("")
  model        String
  quantity     CartQuantity?
}

enum Role {
  ADMIN
  USER
  SUSER
}

model User {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  email    String @unique
  password String
  role     Role   @default(USER)
}
